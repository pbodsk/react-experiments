{"ast":null,"code":"import _slicedToArray from \"/Users/peter/Programming/JavaScript/React/tictactoe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/peter/Programming/JavaScript/React/tictactoe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peter/Programming/JavaScript/React/tictactoe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peter/Programming/JavaScript/React/tictactoe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peter/Programming/JavaScript/React/tictactoe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peter/Programming/JavaScript/React/tictactoe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peter/Programming/JavaScript/React/tictactoe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this2 = this;\n\n      return React.createElement(Square, {\n        value: this.state.squares[i],\n        onClick: function onClick() {\n          return _this2.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var squares = this.state.squares.slice(); //If the game is over or this field is already filled, bail out\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var winner = calculateWinner(this.state.squares);\n      var status;\n\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, status), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  var winningLines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < winningLines.length; i++) {\n    var _winningLines$i = _slicedToArray(winningLines[i], 3),\n        a = _winningLines$i[0],\n        b = _winningLines$i[1],\n        c = _winningLines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/peter/Programming/JavaScript/React/tictactoe/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","state","squares","Array","fill","xIsNext","i","handleClick","slice","calculateWinner","setState","winner","status","renderSquare","Component","Game","render","document","getElementById","winningLines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  renderSquare(i) {\n    return <Square\n      value={this.state.squares[i]}\n      onClick={() => this.handleClick(i)}\n    />;\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    //If the game is over or this field is already filled, bail out\n    if(calculateWinner(squares) || squares[i]){\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if(winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const winningLines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for(let i = 0; i < winningLines.length; i++) {\n    const [a, b, c] = winningLines[i];\n    if (squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n    ) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}